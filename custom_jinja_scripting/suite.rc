#!jinja2
[meta]
  title = Get Contents of a Jinja2 file for use in workflow definition
  description = """
    Use a function from ``lib/python/inputs`` to load a json file.
    Use loaded information from the json file from ``etc/`` to set up the
    suite.
  """
written for cylc version = 7.x

 # import or loader script
{% from "inputs" import load %}
{% from "cylc.flow" import LOG %}

# load the contents of the input file
{% set input_file = 'scales.json' %}
#{% set input_file = 'inputs.json' %}
{% do LOG.info(environ['PWD']) %}

{% if 'cylc-run' in environ['PWD'] %}
  {% set sites = load(environ['CYLC_WORKFLOW_RUN_DIR'] + '/etc/scales.json') %}
{% else %}
  {% set sites = './etc/scales.json' %}
{% endif %}

[scheduling]
  initial cycle point = 20200101
  final cycle point = 20200121

[runtime]
  [[start]]
    script = sleep 5
  [[end]]
    script = sleep 5


{% for site, value in sites.items() %}

[scheduling]
  [[dependencies]]
    [[[P1D]]]
      graph = """
        {% if value < 8 %}
        {{site}}_collate[-P1D] => start
        {% endif %}
        start => {{site}}_process_A & {{site}}_process_B
        {{site}}_process_A & {{site}}_process_B => {{site}}_collate
        {{site}}_collate => end
      """

[runtime]
  [[{{site}}_process_A]]
    script = echo $CYLC_TASK_NAME: Value is "{{value}}"; sleep $(($RANDOM % {{value}}))
  [[{{site}}_process_B]]
    script = echo $CYLC_TASK_NAME: Value is "{{value}}"; sleep $(($RANDOM % {{value}}))
  [[{{site}}_collate]]
    script = echo $CYLC_TASK_NAME: Value is "{{value}}"; sleep $(($RANDOM % {{value}}))


{% endfor %}