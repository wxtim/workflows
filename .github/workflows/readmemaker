#!/usr/bin/env python3

from pathlib import Path
import re
from glob import glob
from subprocess import run
from shlex import split

RE_DESCRIPTION = r"description\s?=\s?[\"']{1,3}\n?(.+?)(?=[\"']{1,3})"
RE_TITLE = r"title\s?=\s?[\"']?(.+?)(?=[\"'\n])"
README_STUB = '''
# Tim's simple Cylc Examples

A small collection of simple suites.
You may find these easier to start with than writing a suite from scratch.

# Index

'''

filenames = list(glob('./*/suite.rc')) + list(glob('./*/flow.cylc'))

index_ = {}
for filename in filenames:
    print(filename)
    if (Path(filename).parent / '.readmelock').exists():
        continue
    with open(filename) as fhandle:
        data = fhandle.read()
    readme = ''
    try:
        title = list(re.finditer(RE_TITLE, data, re.MULTILINE))[0].groups()[0]
    except IndexError:
        print('did not find title')
    try:
        descriptions = list(re.finditer(RE_DESCRIPTION, data, re.MULTILINE | re.DOTALL))
    except IndexError:
        pass

    readme += f"### {title}\n"
    if descriptions:
        descriptions = [d for d in descriptions[0].groups()]
        descriptions = [d.strip() for d in descriptions]
        descriptions = [' '.join(d.split()) for d in descriptions]
        description = '\n\n'.join(descriptions)
        readme += description
    else:
        readme += f"[N.B.] Suite {title} does not have a description."
    readme += '\n'

    index_[title] = filename.replace('/suite.rc', '')

    readmefile = filename.replace('suite.rc', 'README.md')
    with open(readmefile, 'w+') as fh:
        fh.write(readme)

with open('README.md', 'w+') as fh:
    fh.write(README_STUB)
    indexmaker_path = Path(__file__).parent.parent.parent / 'bin/cylc-template'
    index = run(split(str(indexmaker_path)), capture_output=True)
    fh.write(index.stdout.decode())
